@model PersonDocumentViewModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3 class="danger">Are you sure you want to delete this person, *INCLUDING FROM ALL THE BOOKINGS*?</h3>
<div>
    <h4>Person</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Surname)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Surname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Sex)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.Sex
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.BirthDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.BirthDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.BirthPlace)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.BirthPlace
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.BirthProvince)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.BirthProvince
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.BirthCountry)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.BirthCountry
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.PhonePrefix)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.PhonePrefix)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.PhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Email)
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.RoleRelation)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.RoleRelation
        </dd>
        <p>ID Document</p>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Document.DocumentType)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.DocumentType
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Document.SerialNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Document.SerialNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Document.IssuingCountry)
        </dt>
        <dd class="col-sm-10">
            @ViewBag.IssuingCountry
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Document.PdfCopy)
        </dt>
        <dd class="col-sm-10">
            @if (@Model.Document != null && @Model.Document.PdfCopy != null)
            {
                <a asp-action="DownloadFile" asp-controller="Document" asp-route-id="@Model?.Document.id">Download</a>
            }
            else
            {
                <p>Document not uploaded.</p>
            }
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="@Model.Person.id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
